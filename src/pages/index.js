import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react'
import axios from 'axios'
import SpotifyPlayer from 'react-spotify-web-playback'
// import { Router } from 'next/router'
import Link from 'next/link'
import WebPlayback from './dashboard'
import Login from './Log'
import {Router, Routes} from "react-router-dom"
const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const [play, setPlay] = useState(false)

  const [token, setToken] = useState({
    "access_token": null,
    "token_type": null,
  });

  const [tracks, setTracks] = useState();
  async function getNewToken() {
    const Token = await axios.get('http://localhost:5000/auth/token', {
      headers: {
        "mode": "no-cors",
        'Acess-Control-Allow-Origin': '*',
        "options": {
          "allow_accessibility": "*",
          "access-Control-Allow-Origin": "*"
        },
      }
    }).then(data => {
      console.log(data, "promise")
      setToken({
        "access_token": data.data.data,
        "token_type": "Bearer",
      })
    })
    // console.log(Token.data.data);
    // setToken(Token.data.data);

    console.log("setToken", token);
  }

  useEffect(() => {
    if (token.access_token === null) {
      // getNewToken();
    }


  }, [])

  async function getTracks() {
    const Tracks = await axios.get('https://api.spotify.com/v1/tracks/30liHOV26GgDwYnvVzmUL4', {
      "method": "GET",
      headers: {
        "content-type": "application/json",
        "Authorization": `${token.token_type} ${token.access_token}`,
      }
    })
    setTracks(Tracks.data);
    console.log(Tracks);
    console.log(tracks?.preview_url);
    console.log(tracks?.album?.images[0].url), console.log(tracks?.album?.name), console.log(tracks?.album?.artists[0]?.name);
    getAudio();
  }

  // "https://api.spotify.com/v1/tracks/2takcwOaAZWiXQijPHIx7B"
  const getAudio = async () => {
    const Audio = await axios.get('https://api.spotify.com/v1/audio-analysis/2takcwOaAZWiXQijPHIx7B', {
      "method": "GET",
      headers: {
        "content-type": "application/json",
        "Authorization": `${token.token_type} ${token.access_token}`,
      }
    })
    console.log(Audio);
  }


  const premiumToken = "BQAYN3HKTFJl9rzW0j7C1S_3liX_pTbTr-oY6dtAKQWg3znZNQbuNljxWo2XDT8m4ecg0FE8iRSLgrO8y6d1uGIalYXPu8gVIKWieRkFiVPxpjGu125jt3XZMbFazNM8ocznUPkh-K-MUicaiNxtD10b13UFdSQHJb8joNIcAKd2cFH38l5i2Fka52RRb4s6sexAAXaEc-XVakbttcIhlJDIcuxyFfDDlIZbQHAicmEQ5Gujl60LHs7SFQ4PZPY2S3g"
  const Auth = (token) => {
    setToken(token)
  }


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>{token?.access_token}</h1>
        <Link href="/login" className='text-white'>Login</Link>
        <Login/>
        
        <SpotifyPlayer token={premiumToken} uris={["spotify:track:30liHOV26GgDwYnvVzmUL4"]} />
        {
          token?.access_token !== null ? <button className='bg-green-800 p-3 rounded-2xl' onClick={getTracks}>Get Tracks</button> : <button className='bg-orange-500 p-3 rounded-2xl' onClick={getNewToken}>Get Token</button>
        }
        <h1 className='text-red-500'>{tracks?.album?.artists[0]?.name}</h1>
        <Image width={tracks?.album?.images[1]?.width} height={tracks?.album?.images[1]?.height} src={tracks?.album?.images[0]?.url}></Image>
        <audio controls src={tracks?.preview_url}></audio>
        <h1 className='text-white'>{tracks?.album?.name}</h1>
      </main>
    </>
  )
}
